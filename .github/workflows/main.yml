name: Flutter CD - APK

# This workflow is triggered on new tags sent to the repository.

on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '**'           # Push events to every tag including hierarchical tags like v1.0/beta
    
# on: push    # Default will running for every branch.
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    
    # Get flutter dependencies.
    - run: flutter pub get

    # Get git tag name
    - uses: olegtarasov/get-tag@v2 # that generate $GIT_TAG_NAME env
      id: tagName
      with:
        tagRegex: 'internal-v([0-9]+.[0-9]+.[0-9]+\+[0-9]+)' # Optional. Returns specified group text as tag name. Full tag string is returned if regex is not defined.
        tagRegexGroup: 1 # Optional. Default is 1.
    
    # Build apk.
    - run: flutter build apk

    - name: Create Github Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "build/app/outputs/apk/release/app-release.apk"
        token: ${{ secrets.PERSONAL_RELEASE_TOKEN }}
    
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ $GIT_TAG_NAME }}
        path: build/app/outputs/apk/release/app-release.apk
